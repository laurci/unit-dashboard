/* This file was generated by baeta. Do not edit it directly. */

/* eslint-disable */
/* prettier-ignore */

import * as Types from "../../__generated__/types";
import { DocumentNode } from "graphql";
import * as Baeta from "@baeta/core/sdk";
import baetaExtensions from "../../extensions";


interface DefinedFields {
  Message: 'id' | 'value' | 'clientId' | 'client' | 'createdAt';
  Mutation: 'createMessage';
  Client: 'messages';
};

interface DefinedInputFields {
  MessageCreate: 'value' | 'clientId';
};

export type Message = Pick<Types.Message, DefinedFields['Message']>;
export type Client = Types.Client;
export type DateTime = Types.DateTime;
export type MessageCreate = Pick<Types.MessageCreate, DefinedInputFields['MessageCreate']>;
export type Mutation = Pick<Types.Mutation, DefinedFields['Mutation']>;

export namespace ModuleMetadata {
  export const id = 'message';
  export const dirname = './message';
  export const typedef = {"kind":"Document","definitions":[{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Message","loc":{"start":5,"end":12}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"id","loc":{"start":17,"end":19}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":21,"end":23}},"loc":{"start":21,"end":23}},"loc":{"start":21,"end":24}},"directives":[],"loc":{"start":17,"end":24}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"value","loc":{"start":27,"end":32}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":34,"end":40}},"loc":{"start":34,"end":40}},"loc":{"start":34,"end":41}},"directives":[],"loc":{"start":27,"end":41}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"clientId","loc":{"start":44,"end":52}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":54,"end":56}},"loc":{"start":54,"end":56}},"loc":{"start":54,"end":57}},"directives":[],"loc":{"start":44,"end":57}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"client","loc":{"start":60,"end":66}},"arguments":[],"type":{"kind":"NamedType","name":{"kind":"Name","value":"Client","loc":{"start":68,"end":74}},"loc":{"start":68,"end":74}},"directives":[],"loc":{"start":60,"end":74}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"createdAt","loc":{"start":77,"end":86}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"DateTime","loc":{"start":88,"end":96}},"loc":{"start":88,"end":96}},"loc":{"start":88,"end":97}},"directives":[],"loc":{"start":77,"end":97}}],"loc":{"start":0,"end":99}},{"kind":"ObjectTypeExtension","name":{"kind":"Name","value":"Client","loc":{"start":113,"end":119}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"messages","loc":{"start":124,"end":132}},"arguments":[],"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Message","loc":{"start":135,"end":142}},"loc":{"start":135,"end":142}},"loc":{"start":135,"end":143}},"loc":{"start":134,"end":144}},"directives":[],"loc":{"start":124,"end":144}}],"loc":{"start":101,"end":146}},{"kind":"InputObjectTypeDefinition","name":{"kind":"Name","value":"MessageCreate","loc":{"start":154,"end":167}},"directives":[],"fields":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"value","loc":{"start":172,"end":177}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":179,"end":185}},"loc":{"start":179,"end":185}},"loc":{"start":179,"end":186}},"directives":[],"loc":{"start":172,"end":186}},{"kind":"InputValueDefinition","name":{"kind":"Name","value":"clientId","loc":{"start":189,"end":197}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":199,"end":201}},"loc":{"start":199,"end":201}},"loc":{"start":199,"end":202}},"directives":[],"loc":{"start":189,"end":202}}],"loc":{"start":148,"end":204}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Mutation","loc":{"start":211,"end":219}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"createMessage","loc":{"start":224,"end":237}},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"data","loc":{"start":238,"end":242}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"MessageCreate","loc":{"start":244,"end":257}},"loc":{"start":244,"end":257}},"loc":{"start":244,"end":258}},"directives":[],"loc":{"start":238,"end":258}}],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Message","loc":{"start":261,"end":268}},"loc":{"start":261,"end":268}},"loc":{"start":261,"end":269}},"directives":[],"loc":{"start":224,"end":269}}],"loc":{"start":206,"end":271}}]} as unknown as DocumentNode;
  
  export function createManager(module: Baeta.ModuleBuilder) {
    return {
      ...module.createModuleMethods<Types.ContextType>(),
      Message: {
        ...module.createTypeMethods<Message, Types.ContextType>("Message"),
        id: module.createResolverBuilder<Types.Scalars["ID"], Message, Types.ContextType, {}>("Message", "id"),
        value: module.createResolverBuilder<Types.Scalars["String"], Message, Types.ContextType, {}>("Message", "value"),
        clientId: module.createResolverBuilder<Types.Scalars["ID"], Message, Types.ContextType, {}>("Message", "clientId"),
        client: module.createResolverBuilder<Types.Maybe<Client>, Message, Types.ContextType, {}>("Message", "client"),
        createdAt: module.createResolverBuilder<DateTime, Message, Types.ContextType, {}>("Message", "createdAt"),
      },
      Mutation: {
        ...module.createTypeMethods<{}, Types.ContextType>("Mutation"),
        createMessage: module.createResolverBuilder<Message, {}, Types.ContextType, Types.MutationCreateMessageArgs>("Mutation", "createMessage"),
      },
      Client: {
        ...module.createTypeMethods<Client, Types.ContextType>("Client"),
        messages: module.createResolverBuilder<Types.Maybe<Array<Message>>, Client, Types.ContextType, {}>("Client", "messages"),
      },
    };
  }
}

export const createMessageModule = () => Baeta.createModuleManager(ModuleMetadata, baetaExtensions);
export const getMessageModule = Baeta.createSingletonModule(createMessageModule);
