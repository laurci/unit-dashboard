/* This file was generated by baeta. Do not edit it directly. */

/* eslint-disable */
/* prettier-ignore */

import * as Types from "../../__generated__/types";
import { DocumentNode } from "graphql";
import * as Baeta from "@baeta/core/sdk";
import baetaExtensions from "../../extensions";


interface DefinedFields {
  Log: 'id' | 'type' | 'title' | 'description' | 'clientId' | 'client' | 'createdAt';
  Query: 'logs' | 'log';
  Mutation: 'logCreate';
  Subscription: 'logCreated';
  Client: 'logs';
};

interface DefinedEnumValues {
  LogType: 'DEBUG' | 'INFO' | 'WARNING' | 'ERROR';
};

interface DefinedInputFields {
  LogCreate: 'type' | 'title' | 'description' | 'clientId';
  LogWhere: 'clientId';
  LogWhereUnique: 'id';
};

export type Log = Pick<Types.Log, DefinedFields['Log']>;
export type LogType = DefinedEnumValues['LogType'];
export type Client = Types.Client;
export type DateTime = Types.DateTime;
export type LogCreate = Pick<Types.LogCreate, DefinedInputFields['LogCreate']>;
export type LogWhere = Pick<Types.LogWhere, DefinedInputFields['LogWhere']>;
export type LogWhereUnique = Pick<Types.LogWhereUnique, DefinedInputFields['LogWhereUnique']>;
export type Query = Pick<Types.Query, DefinedFields['Query']>;
export type Mutation = Pick<Types.Mutation, DefinedFields['Mutation']>;
export type Subscription = Pick<Types.Subscription, DefinedFields['Subscription']>;

export namespace ModuleMetadata {
  export const id = 'log';
  export const dirname = './log';
  export const typedef = {"kind":"Document","definitions":[{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Log","loc":{"start":5,"end":8}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"id","loc":{"start":13,"end":15}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":17,"end":19}},"loc":{"start":17,"end":19}},"loc":{"start":17,"end":20}},"directives":[],"loc":{"start":13,"end":20}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"type","loc":{"start":23,"end":27}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"LogType","loc":{"start":29,"end":36}},"loc":{"start":29,"end":36}},"loc":{"start":29,"end":37}},"directives":[],"loc":{"start":23,"end":37}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"title","loc":{"start":40,"end":45}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":47,"end":53}},"loc":{"start":47,"end":53}},"loc":{"start":47,"end":54}},"directives":[],"loc":{"start":40,"end":54}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"description","loc":{"start":57,"end":68}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":70,"end":76}},"loc":{"start":70,"end":76}},"loc":{"start":70,"end":77}},"directives":[],"loc":{"start":57,"end":77}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"clientId","loc":{"start":80,"end":88}},"arguments":[],"type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":90,"end":96}},"loc":{"start":90,"end":96}},"directives":[],"loc":{"start":80,"end":96}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"client","loc":{"start":99,"end":105}},"arguments":[],"type":{"kind":"NamedType","name":{"kind":"Name","value":"Client","loc":{"start":107,"end":113}},"loc":{"start":107,"end":113}},"directives":[],"loc":{"start":99,"end":113}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"createdAt","loc":{"start":116,"end":125}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"DateTime","loc":{"start":127,"end":135}},"loc":{"start":127,"end":135}},"loc":{"start":127,"end":136}},"directives":[],"loc":{"start":116,"end":136}}],"loc":{"start":0,"end":138}},{"kind":"ObjectTypeExtension","name":{"kind":"Name","value":"Client","loc":{"start":152,"end":158}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"logs","loc":{"start":163,"end":167}},"arguments":[],"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Log","loc":{"start":170,"end":173}},"loc":{"start":170,"end":173}},"loc":{"start":170,"end":174}},"loc":{"start":169,"end":175}},"directives":[],"loc":{"start":163,"end":175}}],"loc":{"start":140,"end":177}},{"kind":"EnumTypeDefinition","name":{"kind":"Name","value":"LogType","loc":{"start":184,"end":191}},"directives":[],"values":[{"kind":"EnumValueDefinition","name":{"kind":"Name","value":"DEBUG","loc":{"start":196,"end":201}},"directives":[],"loc":{"start":196,"end":201}},{"kind":"EnumValueDefinition","name":{"kind":"Name","value":"INFO","loc":{"start":204,"end":208}},"directives":[],"loc":{"start":204,"end":208}},{"kind":"EnumValueDefinition","name":{"kind":"Name","value":"WARNING","loc":{"start":211,"end":218}},"directives":[],"loc":{"start":211,"end":218}},{"kind":"EnumValueDefinition","name":{"kind":"Name","value":"ERROR","loc":{"start":221,"end":226}},"directives":[],"loc":{"start":221,"end":226}}],"loc":{"start":179,"end":228}},{"kind":"InputObjectTypeDefinition","name":{"kind":"Name","value":"LogCreate","loc":{"start":236,"end":245}},"directives":[],"fields":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"type","loc":{"start":250,"end":254}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"LogType","loc":{"start":256,"end":263}},"loc":{"start":256,"end":263}},"loc":{"start":256,"end":264}},"directives":[],"loc":{"start":250,"end":264}},{"kind":"InputValueDefinition","name":{"kind":"Name","value":"title","loc":{"start":267,"end":272}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":274,"end":280}},"loc":{"start":274,"end":280}},"loc":{"start":274,"end":281}},"directives":[],"loc":{"start":267,"end":281}},{"kind":"InputValueDefinition","name":{"kind":"Name","value":"description","loc":{"start":284,"end":295}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":297,"end":303}},"loc":{"start":297,"end":303}},"loc":{"start":297,"end":304}},"directives":[],"loc":{"start":284,"end":304}},{"kind":"InputValueDefinition","name":{"kind":"Name","value":"clientId","loc":{"start":307,"end":315}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":317,"end":323}},"loc":{"start":317,"end":323}},"directives":[],"loc":{"start":307,"end":323}}],"loc":{"start":230,"end":325}},{"kind":"InputObjectTypeDefinition","name":{"kind":"Name","value":"LogWhere","loc":{"start":333,"end":341}},"directives":[],"fields":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"clientId","loc":{"start":346,"end":354}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":356,"end":362}},"loc":{"start":356,"end":362}},"directives":[],"loc":{"start":346,"end":362}}],"loc":{"start":327,"end":364}},{"kind":"InputObjectTypeDefinition","name":{"kind":"Name","value":"LogWhereUnique","loc":{"start":372,"end":386}},"directives":[],"fields":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"id","loc":{"start":391,"end":393}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":395,"end":397}},"loc":{"start":395,"end":397}},"loc":{"start":395,"end":398}},"directives":[],"loc":{"start":391,"end":398}}],"loc":{"start":366,"end":400}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Query","loc":{"start":407,"end":412}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"logs","loc":{"start":417,"end":421}},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"where","loc":{"start":422,"end":427}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"LogWhere","loc":{"start":429,"end":437}},"loc":{"start":429,"end":437}},"directives":[],"loc":{"start":422,"end":437}}],"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Log","loc":{"start":441,"end":444}},"loc":{"start":441,"end":444}},"loc":{"start":441,"end":445}},"loc":{"start":440,"end":446}},"loc":{"start":440,"end":447}},"directives":[],"loc":{"start":417,"end":447}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"log","loc":{"start":450,"end":453}},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"where","loc":{"start":454,"end":459}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"LogWhereUnique","loc":{"start":461,"end":475}},"loc":{"start":461,"end":475}},"loc":{"start":461,"end":476}},"directives":[],"loc":{"start":454,"end":476}}],"type":{"kind":"NamedType","name":{"kind":"Name","value":"Log","loc":{"start":479,"end":482}},"loc":{"start":479,"end":482}},"directives":[],"loc":{"start":450,"end":482}}],"loc":{"start":402,"end":484}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Mutation","loc":{"start":491,"end":499}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"logCreate","loc":{"start":504,"end":513}},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"data","loc":{"start":514,"end":518}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"LogCreate","loc":{"start":520,"end":529}},"loc":{"start":520,"end":529}},"loc":{"start":520,"end":530}},"directives":[],"loc":{"start":514,"end":530}}],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Log","loc":{"start":533,"end":536}},"loc":{"start":533,"end":536}},"loc":{"start":533,"end":537}},"directives":[],"loc":{"start":504,"end":537}}],"loc":{"start":486,"end":539}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Subscription","loc":{"start":546,"end":558}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"logCreated","loc":{"start":563,"end":573}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Log","loc":{"start":575,"end":578}},"loc":{"start":575,"end":578}},"loc":{"start":575,"end":579}},"directives":[],"loc":{"start":563,"end":579}}],"loc":{"start":541,"end":581}}]} as unknown as DocumentNode;
  
  export function createManager(module: Baeta.ModuleBuilder) {
    return {
      ...module.createModuleMethods<Types.ContextType>(),
      Log: {
        ...module.createTypeMethods<Log, Types.ContextType>("Log"),
        id: module.createResolverBuilder<Types.Scalars["ID"], Log, Types.ContextType, {}>("Log", "id"),
        type: module.createResolverBuilder<LogType, Log, Types.ContextType, {}>("Log", "type"),
        title: module.createResolverBuilder<Types.Scalars["String"], Log, Types.ContextType, {}>("Log", "title"),
        description: module.createResolverBuilder<Types.Scalars["String"], Log, Types.ContextType, {}>("Log", "description"),
        clientId: module.createResolverBuilder<Types.Maybe<Types.Scalars["String"]>, Log, Types.ContextType, {}>("Log", "clientId"),
        client: module.createResolverBuilder<Types.Maybe<Client>, Log, Types.ContextType, {}>("Log", "client"),
        createdAt: module.createResolverBuilder<DateTime, Log, Types.ContextType, {}>("Log", "createdAt"),
      },
      Query: {
        ...module.createTypeMethods<{}, Types.ContextType>("Query"),
        logs: module.createResolverBuilder<Array<Log>, {}, Types.ContextType, Types.QueryLogsArgs>("Query", "logs"),
        log: module.createResolverBuilder<Types.Maybe<Log>, {}, Types.ContextType, Types.QueryLogArgs>("Query", "log"),
      },
      Mutation: {
        ...module.createTypeMethods<{}, Types.ContextType>("Mutation"),
        logCreate: module.createResolverBuilder<Log, {}, Types.ContextType, Types.MutationLogCreateArgs>("Mutation", "logCreate"),
      },
      Client: {
        ...module.createTypeMethods<Client, Types.ContextType>("Client"),
        logs: module.createResolverBuilder<Types.Maybe<Array<Log>>, Client, Types.ContextType, {}>("Client", "logs"),
      },
      Subscription: {
        ...module.createSubscriptionMethods<{}, Types.ContextType>(),
        logCreated: module.createSubscriptionBuilder<Log, {}, Types.ContextType, {}>("logCreated"),
      },
    };
  }
}

export const createLogModule = () => Baeta.createModuleManager(ModuleMetadata, baetaExtensions);
export const getLogModule = Baeta.createSingletonModule(createLogModule);
