/* This file was generated by baeta. Do not edit it directly. */

/* eslint-disable */
/* prettier-ignore */

import * as Types from "../../__generated__/types";
import { DocumentNode } from "graphql";
import * as Baeta from "@baeta/core/sdk";
import baetaExtensions from "../../extensions";


interface DefinedFields {
  Client: 'id' | 'name' | 'connected' | 'lastConnected';
  Query: 'clients' | 'client';
  Mutation: 'clientConnected' | 'clientDisconnected' | 'clientCreate';
};

interface DefinedInputFields {
  ClientCreate: 'name' | 'connected';
  ClientWhere: 'connected';
  ClientWhereUnique: 'id';
};

export type Client = Pick<Types.Client, DefinedFields['Client']>;
export type DateTime = Types.DateTime;
export type ClientCreate = Pick<Types.ClientCreate, DefinedInputFields['ClientCreate']>;
export type ClientWhere = Pick<Types.ClientWhere, DefinedInputFields['ClientWhere']>;
export type ClientWhereUnique = Pick<Types.ClientWhereUnique, DefinedInputFields['ClientWhereUnique']>;
export type Query = Pick<Types.Query, DefinedFields['Query']>;
export type Mutation = Pick<Types.Mutation, DefinedFields['Mutation']>;

export namespace ModuleMetadata {
  export const id = 'client';
  export const dirname = './client';
  export const typedef = {"kind":"Document","definitions":[{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Client","loc":{"start":5,"end":11}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"id","loc":{"start":16,"end":18}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":20,"end":22}},"loc":{"start":20,"end":22}},"loc":{"start":20,"end":23}},"directives":[],"loc":{"start":16,"end":23}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"name","loc":{"start":26,"end":30}},"arguments":[],"type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":32,"end":38}},"loc":{"start":32,"end":38}},"directives":[],"loc":{"start":26,"end":38}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"connected","loc":{"start":41,"end":50}},"arguments":[],"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean","loc":{"start":52,"end":59}},"loc":{"start":52,"end":59}},"directives":[],"loc":{"start":41,"end":59}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"lastConnected","loc":{"start":62,"end":75}},"arguments":[],"type":{"kind":"NamedType","name":{"kind":"Name","value":"DateTime","loc":{"start":77,"end":85}},"loc":{"start":77,"end":85}},"directives":[],"loc":{"start":62,"end":85}}],"loc":{"start":0,"end":87}},{"kind":"InputObjectTypeDefinition","name":{"kind":"Name","value":"ClientCreate","loc":{"start":95,"end":107}},"directives":[],"fields":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"name","loc":{"start":112,"end":116}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":118,"end":124}},"loc":{"start":118,"end":124}},"directives":[],"loc":{"start":112,"end":124}},{"kind":"InputValueDefinition","name":{"kind":"Name","value":"connected","loc":{"start":127,"end":136}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean","loc":{"start":138,"end":145}},"loc":{"start":138,"end":145}},"directives":[],"loc":{"start":127,"end":145}}],"loc":{"start":89,"end":147}},{"kind":"InputObjectTypeDefinition","name":{"kind":"Name","value":"ClientWhere","loc":{"start":155,"end":166}},"directives":[],"fields":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"connected","loc":{"start":171,"end":180}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean","loc":{"start":182,"end":189}},"loc":{"start":182,"end":189}},"directives":[],"loc":{"start":171,"end":189}}],"loc":{"start":149,"end":191}},{"kind":"InputObjectTypeDefinition","name":{"kind":"Name","value":"ClientWhereUnique","loc":{"start":199,"end":216}},"directives":[],"fields":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"id","loc":{"start":221,"end":223}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":225,"end":227}},"loc":{"start":225,"end":227}},"loc":{"start":225,"end":228}},"directives":[],"loc":{"start":221,"end":228}}],"loc":{"start":193,"end":230}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Query","loc":{"start":237,"end":242}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"clients","loc":{"start":247,"end":254}},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"where","loc":{"start":255,"end":260}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ClientWhere","loc":{"start":262,"end":273}},"loc":{"start":262,"end":273}},"directives":[],"loc":{"start":255,"end":273}}],"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Client","loc":{"start":277,"end":283}},"loc":{"start":277,"end":283}},"loc":{"start":277,"end":284}},"loc":{"start":276,"end":285}},"loc":{"start":276,"end":286}},"directives":[],"loc":{"start":247,"end":286}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"client","loc":{"start":289,"end":295}},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"where","loc":{"start":296,"end":301}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ClientWhereUnique","loc":{"start":303,"end":320}},"loc":{"start":303,"end":320}},"loc":{"start":303,"end":321}},"directives":[],"loc":{"start":296,"end":321}}],"type":{"kind":"NamedType","name":{"kind":"Name","value":"Client","loc":{"start":324,"end":330}},"loc":{"start":324,"end":330}},"directives":[],"loc":{"start":289,"end":330}}],"loc":{"start":232,"end":332}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Mutation","loc":{"start":339,"end":347}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"clientConnected","loc":{"start":352,"end":367}},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"id","loc":{"start":368,"end":370}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":372,"end":374}},"loc":{"start":372,"end":374}},"loc":{"start":372,"end":375}},"directives":[],"loc":{"start":368,"end":375}}],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Client","loc":{"start":378,"end":384}},"loc":{"start":378,"end":384}},"loc":{"start":378,"end":385}},"directives":[],"loc":{"start":352,"end":385}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"clientDisconnected","loc":{"start":388,"end":406}},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"id","loc":{"start":407,"end":409}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":411,"end":413}},"loc":{"start":411,"end":413}},"loc":{"start":411,"end":414}},"directives":[],"loc":{"start":407,"end":414}}],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Client","loc":{"start":417,"end":423}},"loc":{"start":417,"end":423}},"loc":{"start":417,"end":424}},"directives":[],"loc":{"start":388,"end":424}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"clientCreate","loc":{"start":427,"end":439}},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"data","loc":{"start":440,"end":444}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ClientCreate","loc":{"start":446,"end":458}},"loc":{"start":446,"end":458}},"loc":{"start":446,"end":459}},"directives":[],"loc":{"start":440,"end":459}}],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Client","loc":{"start":462,"end":468}},"loc":{"start":462,"end":468}},"loc":{"start":462,"end":469}},"directives":[],"loc":{"start":427,"end":469}}],"loc":{"start":334,"end":471}}]} as unknown as DocumentNode;
  
  export function createManager(module: Baeta.ModuleBuilder) {
    return {
      ...module.createModuleMethods<Types.ContextType>(),
      Client: {
        ...module.createTypeMethods<Client, Types.ContextType>("Client"),
        id: module.createResolverBuilder<Types.Scalars["ID"], Client, Types.ContextType, {}>("Client", "id"),
        name: module.createResolverBuilder<Types.Maybe<Types.Scalars["String"]>, Client, Types.ContextType, {}>("Client", "name"),
        connected: module.createResolverBuilder<Types.Maybe<Types.Scalars["Boolean"]>, Client, Types.ContextType, {}>("Client", "connected"),
        lastConnected: module.createResolverBuilder<Types.Maybe<DateTime>, Client, Types.ContextType, {}>("Client", "lastConnected"),
      },
      Query: {
        ...module.createTypeMethods<{}, Types.ContextType>("Query"),
        clients: module.createResolverBuilder<Array<Client>, {}, Types.ContextType, Types.QueryClientsArgs>("Query", "clients"),
        client: module.createResolverBuilder<Types.Maybe<Client>, {}, Types.ContextType, Types.QueryClientArgs>("Query", "client"),
      },
      Mutation: {
        ...module.createTypeMethods<{}, Types.ContextType>("Mutation"),
        clientConnected: module.createResolverBuilder<Client, {}, Types.ContextType, Types.MutationClientConnectedArgs>("Mutation", "clientConnected"),
        clientDisconnected: module.createResolverBuilder<Client, {}, Types.ContextType, Types.MutationClientDisconnectedArgs>("Mutation", "clientDisconnected"),
        clientCreate: module.createResolverBuilder<Client, {}, Types.ContextType, Types.MutationClientCreateArgs>("Mutation", "clientCreate"),
      },
    };
  }
}

export const createClientModule = () => Baeta.createModuleManager(ModuleMetadata, baetaExtensions);
export const getClientModule = Baeta.createSingletonModule(createClientModule);
