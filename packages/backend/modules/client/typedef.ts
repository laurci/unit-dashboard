/* This file was generated by baeta. Do not edit it directly. */

/* eslint-disable */
/* prettier-ignore */

import * as Types from "../../__generated__/types";
import { DocumentNode } from "graphql";
import * as Baeta from "@baeta/core/sdk";
import baetaExtensions from "../../extensions";


interface DefinedFields {
  Client: 'id' | 'name' | 'appName' | 'connected' | 'lastConnected';
  Query: 'clients' | 'client';
  Mutation: 'clientConnected' | 'clientDisconnected' | 'clientCreate';
};

interface DefinedInputFields {
  ClientCreate: 'name' | 'appName' | 'connected';
  ClientWhere: 'connected';
  ClientWhereUnique: 'id';
};

export type Client = Pick<Types.Client, DefinedFields['Client']>;
export type DateTime = Types.DateTime;
export type ClientCreate = Pick<Types.ClientCreate, DefinedInputFields['ClientCreate']>;
export type ClientWhere = Pick<Types.ClientWhere, DefinedInputFields['ClientWhere']>;
export type ClientWhereUnique = Pick<Types.ClientWhereUnique, DefinedInputFields['ClientWhereUnique']>;
export type Query = Pick<Types.Query, DefinedFields['Query']>;
export type Mutation = Pick<Types.Mutation, DefinedFields['Mutation']>;

export namespace ModuleMetadata {
  export const id = 'client';
  export const dirname = './client';
  export const typedef = {"kind":"Document","definitions":[{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Client","loc":{"start":5,"end":11}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"id","loc":{"start":16,"end":18}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":20,"end":22}},"loc":{"start":20,"end":22}},"loc":{"start":20,"end":23}},"directives":[],"loc":{"start":16,"end":23}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"name","loc":{"start":26,"end":30}},"arguments":[],"type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":32,"end":38}},"loc":{"start":32,"end":38}},"directives":[],"loc":{"start":26,"end":38}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"appName","loc":{"start":41,"end":48}},"arguments":[],"type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":50,"end":56}},"loc":{"start":50,"end":56}},"directives":[],"loc":{"start":41,"end":56}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"connected","loc":{"start":59,"end":68}},"arguments":[],"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean","loc":{"start":70,"end":77}},"loc":{"start":70,"end":77}},"directives":[],"loc":{"start":59,"end":77}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"lastConnected","loc":{"start":80,"end":93}},"arguments":[],"type":{"kind":"NamedType","name":{"kind":"Name","value":"DateTime","loc":{"start":95,"end":103}},"loc":{"start":95,"end":103}},"directives":[],"loc":{"start":80,"end":103}}],"loc":{"start":0,"end":105}},{"kind":"InputObjectTypeDefinition","name":{"kind":"Name","value":"ClientCreate","loc":{"start":113,"end":125}},"directives":[],"fields":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"name","loc":{"start":130,"end":134}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":136,"end":142}},"loc":{"start":136,"end":142}},"directives":[],"loc":{"start":130,"end":142}},{"kind":"InputValueDefinition","name":{"kind":"Name","value":"appName","loc":{"start":145,"end":152}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":154,"end":160}},"loc":{"start":154,"end":160}},"directives":[],"loc":{"start":145,"end":160}},{"kind":"InputValueDefinition","name":{"kind":"Name","value":"connected","loc":{"start":163,"end":172}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean","loc":{"start":174,"end":181}},"loc":{"start":174,"end":181}},"directives":[],"loc":{"start":163,"end":181}}],"loc":{"start":107,"end":183}},{"kind":"InputObjectTypeDefinition","name":{"kind":"Name","value":"ClientWhere","loc":{"start":191,"end":202}},"directives":[],"fields":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"connected","loc":{"start":207,"end":216}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean","loc":{"start":218,"end":225}},"loc":{"start":218,"end":225}},"directives":[],"loc":{"start":207,"end":225}}],"loc":{"start":185,"end":227}},{"kind":"InputObjectTypeDefinition","name":{"kind":"Name","value":"ClientWhereUnique","loc":{"start":235,"end":252}},"directives":[],"fields":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"id","loc":{"start":257,"end":259}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":261,"end":263}},"loc":{"start":261,"end":263}},"loc":{"start":261,"end":264}},"directives":[],"loc":{"start":257,"end":264}}],"loc":{"start":229,"end":266}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Query","loc":{"start":273,"end":278}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"clients","loc":{"start":283,"end":290}},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"where","loc":{"start":291,"end":296}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ClientWhere","loc":{"start":298,"end":309}},"loc":{"start":298,"end":309}},"directives":[],"loc":{"start":291,"end":309}}],"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Client","loc":{"start":313,"end":319}},"loc":{"start":313,"end":319}},"loc":{"start":313,"end":320}},"loc":{"start":312,"end":321}},"loc":{"start":312,"end":322}},"directives":[],"loc":{"start":283,"end":322}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"client","loc":{"start":325,"end":331}},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"where","loc":{"start":332,"end":337}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ClientWhereUnique","loc":{"start":339,"end":356}},"loc":{"start":339,"end":356}},"loc":{"start":339,"end":357}},"directives":[],"loc":{"start":332,"end":357}}],"type":{"kind":"NamedType","name":{"kind":"Name","value":"Client","loc":{"start":360,"end":366}},"loc":{"start":360,"end":366}},"directives":[],"loc":{"start":325,"end":366}}],"loc":{"start":268,"end":368}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Mutation","loc":{"start":375,"end":383}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"clientConnected","loc":{"start":388,"end":403}},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"id","loc":{"start":404,"end":406}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":408,"end":410}},"loc":{"start":408,"end":410}},"loc":{"start":408,"end":411}},"directives":[],"loc":{"start":404,"end":411}}],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Client","loc":{"start":414,"end":420}},"loc":{"start":414,"end":420}},"loc":{"start":414,"end":421}},"directives":[],"loc":{"start":388,"end":421}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"clientDisconnected","loc":{"start":424,"end":442}},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"id","loc":{"start":443,"end":445}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":447,"end":449}},"loc":{"start":447,"end":449}},"loc":{"start":447,"end":450}},"directives":[],"loc":{"start":443,"end":450}}],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Client","loc":{"start":453,"end":459}},"loc":{"start":453,"end":459}},"loc":{"start":453,"end":460}},"directives":[],"loc":{"start":424,"end":460}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"clientCreate","loc":{"start":463,"end":475}},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"data","loc":{"start":476,"end":480}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ClientCreate","loc":{"start":482,"end":494}},"loc":{"start":482,"end":494}},"loc":{"start":482,"end":495}},"directives":[],"loc":{"start":476,"end":495}}],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Client","loc":{"start":498,"end":504}},"loc":{"start":498,"end":504}},"loc":{"start":498,"end":505}},"directives":[],"loc":{"start":463,"end":505}}],"loc":{"start":370,"end":507}}]} as unknown as DocumentNode;
  
  export function createManager(module: Baeta.ModuleBuilder) {
    return {
      ...module.createModuleMethods<Types.ContextType>(),
      Client: {
        ...module.createTypeMethods<Client, Types.ContextType>("Client"),
        id: module.createResolverBuilder<Types.Scalars["ID"], Client, Types.ContextType, {}>("Client", "id"),
        name: module.createResolverBuilder<Types.Maybe<Types.Scalars["String"]>, Client, Types.ContextType, {}>("Client", "name"),
        appName: module.createResolverBuilder<Types.Maybe<Types.Scalars["String"]>, Client, Types.ContextType, {}>("Client", "appName"),
        connected: module.createResolverBuilder<Types.Maybe<Types.Scalars["Boolean"]>, Client, Types.ContextType, {}>("Client", "connected"),
        lastConnected: module.createResolverBuilder<Types.Maybe<DateTime>, Client, Types.ContextType, {}>("Client", "lastConnected"),
      },
      Query: {
        ...module.createTypeMethods<{}, Types.ContextType>("Query"),
        clients: module.createResolverBuilder<Array<Client>, {}, Types.ContextType, Types.QueryClientsArgs>("Query", "clients"),
        client: module.createResolverBuilder<Types.Maybe<Client>, {}, Types.ContextType, Types.QueryClientArgs>("Query", "client"),
      },
      Mutation: {
        ...module.createTypeMethods<{}, Types.ContextType>("Mutation"),
        clientConnected: module.createResolverBuilder<Client, {}, Types.ContextType, Types.MutationClientConnectedArgs>("Mutation", "clientConnected"),
        clientDisconnected: module.createResolverBuilder<Client, {}, Types.ContextType, Types.MutationClientDisconnectedArgs>("Mutation", "clientDisconnected"),
        clientCreate: module.createResolverBuilder<Client, {}, Types.ContextType, Types.MutationClientCreateArgs>("Mutation", "clientCreate"),
      },
    };
  }
}

export const createClientModule = () => Baeta.createModuleManager(ModuleMetadata, baetaExtensions);
export const getClientModule = Baeta.createSingletonModule(createClientModule);
