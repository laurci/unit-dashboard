/* This file was generated by baeta. Do not edit it directly. */

/* eslint-disable */
/* prettier-ignore */

import * as Types from "../../__generated__/types";
import { DocumentNode } from "graphql";
import * as Baeta from "@baeta/core/sdk";
import baetaExtensions from "../../extensions";


interface DefinedFields {
  Message: 'id' | 'value' | 'direction' | 'clientId' | 'client' | 'createdAt';
  Mutation: 'createMessage';
  Client: 'messages';
};

interface DefinedEnumValues {
  MessageDirection: 'IN' | 'OUT';
};

interface DefinedInputFields {
  MessageCreate: 'value' | 'clientId' | 'direction';
};

export type Message = Pick<Types.Message, DefinedFields['Message']>;
export type MessageDirection = DefinedEnumValues['MessageDirection'];
export type Client = Types.Client;
export type DateTime = Types.DateTime;
export type MessageCreate = Pick<Types.MessageCreate, DefinedInputFields['MessageCreate']>;
export type Mutation = Pick<Types.Mutation, DefinedFields['Mutation']>;

export namespace ModuleMetadata {
  export const id = 'message';
  export const dirname = './message';
  export const typedef = {"kind":"Document","definitions":[{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Message","loc":{"start":5,"end":12}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"id","loc":{"start":17,"end":19}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":21,"end":23}},"loc":{"start":21,"end":23}},"loc":{"start":21,"end":24}},"directives":[],"loc":{"start":17,"end":24}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"value","loc":{"start":27,"end":32}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":34,"end":40}},"loc":{"start":34,"end":40}},"loc":{"start":34,"end":41}},"directives":[],"loc":{"start":27,"end":41}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"direction","loc":{"start":44,"end":53}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"MessageDirection","loc":{"start":55,"end":71}},"loc":{"start":55,"end":71}},"loc":{"start":55,"end":72}},"directives":[],"loc":{"start":44,"end":72}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"clientId","loc":{"start":75,"end":83}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":85,"end":87}},"loc":{"start":85,"end":87}},"loc":{"start":85,"end":88}},"directives":[],"loc":{"start":75,"end":88}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"client","loc":{"start":91,"end":97}},"arguments":[],"type":{"kind":"NamedType","name":{"kind":"Name","value":"Client","loc":{"start":99,"end":105}},"loc":{"start":99,"end":105}},"directives":[],"loc":{"start":91,"end":105}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"createdAt","loc":{"start":108,"end":117}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"DateTime","loc":{"start":119,"end":127}},"loc":{"start":119,"end":127}},"loc":{"start":119,"end":128}},"directives":[],"loc":{"start":108,"end":128}}],"loc":{"start":0,"end":130}},{"kind":"EnumTypeDefinition","name":{"kind":"Name","value":"MessageDirection","loc":{"start":137,"end":153}},"directives":[],"values":[{"kind":"EnumValueDefinition","name":{"kind":"Name","value":"IN","loc":{"start":158,"end":160}},"directives":[],"loc":{"start":158,"end":160}},{"kind":"EnumValueDefinition","name":{"kind":"Name","value":"OUT","loc":{"start":163,"end":166}},"directives":[],"loc":{"start":163,"end":166}}],"loc":{"start":132,"end":168}},{"kind":"ObjectTypeExtension","name":{"kind":"Name","value":"Client","loc":{"start":182,"end":188}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"messages","loc":{"start":193,"end":201}},"arguments":[],"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Message","loc":{"start":204,"end":211}},"loc":{"start":204,"end":211}},"loc":{"start":204,"end":212}},"loc":{"start":203,"end":213}},"directives":[],"loc":{"start":193,"end":213}}],"loc":{"start":170,"end":215}},{"kind":"InputObjectTypeDefinition","name":{"kind":"Name","value":"MessageCreate","loc":{"start":223,"end":236}},"directives":[],"fields":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"value","loc":{"start":241,"end":246}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":248,"end":254}},"loc":{"start":248,"end":254}},"loc":{"start":248,"end":255}},"directives":[],"loc":{"start":241,"end":255}},{"kind":"InputValueDefinition","name":{"kind":"Name","value":"clientId","loc":{"start":258,"end":266}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":268,"end":270}},"loc":{"start":268,"end":270}},"loc":{"start":268,"end":271}},"directives":[],"loc":{"start":258,"end":271}},{"kind":"InputValueDefinition","name":{"kind":"Name","value":"direction","loc":{"start":274,"end":283}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"MessageDirection","loc":{"start":285,"end":301}},"loc":{"start":285,"end":301}},"loc":{"start":285,"end":302}},"directives":[],"loc":{"start":274,"end":302}}],"loc":{"start":217,"end":304}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Mutation","loc":{"start":311,"end":319}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"createMessage","loc":{"start":324,"end":337}},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"data","loc":{"start":338,"end":342}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"MessageCreate","loc":{"start":344,"end":357}},"loc":{"start":344,"end":357}},"loc":{"start":344,"end":358}},"directives":[],"loc":{"start":338,"end":358}}],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Message","loc":{"start":361,"end":368}},"loc":{"start":361,"end":368}},"loc":{"start":361,"end":369}},"directives":[],"loc":{"start":324,"end":369}}],"loc":{"start":306,"end":371}}]} as unknown as DocumentNode;
  
  export function createManager(module: Baeta.ModuleBuilder) {
    return {
      ...module.createModuleMethods<Types.ContextType>(),
      Message: {
        ...module.createTypeMethods<Message, Types.ContextType>("Message"),
        id: module.createResolverBuilder<Types.Scalars["ID"], Message, Types.ContextType, {}>("Message", "id"),
        value: module.createResolverBuilder<Types.Scalars["String"], Message, Types.ContextType, {}>("Message", "value"),
        direction: module.createResolverBuilder<MessageDirection, Message, Types.ContextType, {}>("Message", "direction"),
        clientId: module.createResolverBuilder<Types.Scalars["ID"], Message, Types.ContextType, {}>("Message", "clientId"),
        client: module.createResolverBuilder<Types.Maybe<Client>, Message, Types.ContextType, {}>("Message", "client"),
        createdAt: module.createResolverBuilder<DateTime, Message, Types.ContextType, {}>("Message", "createdAt"),
      },
      Mutation: {
        ...module.createTypeMethods<{}, Types.ContextType>("Mutation"),
        createMessage: module.createResolverBuilder<Message, {}, Types.ContextType, Types.MutationCreateMessageArgs>("Mutation", "createMessage"),
      },
      Client: {
        ...module.createTypeMethods<Client, Types.ContextType>("Client"),
        messages: module.createResolverBuilder<Types.Maybe<Array<Message>>, Client, Types.ContextType, {}>("Client", "messages"),
      },
    };
  }
}

export const createMessageModule = () => Baeta.createModuleManager(ModuleMetadata, baetaExtensions);
export const getMessageModule = Baeta.createSingletonModule(createMessageModule);
